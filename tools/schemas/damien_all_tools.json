[
  {
    "name": "damien_list_emails",
    "description": "Lists email summaries from the user's Gmail account based on specified criteria. Returns a list of emails and a token for pagination if more emails are available.",
    "input_schema": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "Optional. Gmail search query string to filter emails (e.g., 'is:unread from:boss@example.com', 'subject:report older_than:7d'). If omitted, lists recent emails."
        },
        "max_results": {
          "type": "integer",
          "description": "Optional. Maximum number of email summaries to return in this call. Default is 10, maximum is typically 50-100 per page for performance."
        },
        "page_token": {
          "type": "string",
          "description": "Optional. A token received from a previous 'damien_list_emails' call to fetch the next page of results."
        }
      },
      "required": []
    },
    "output_schema": {
      "type": "object",
      "properties": {
        "email_summaries": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "thread_id": {
                "type": "string"
              },
              "subject": {
                "type": "string"
              },
              "from": {
                "type": "string"
              },
              "snippet": {
                "type": "string"
              },
              "date": {
                "type": "string"
              },
              "has_attachments": {
                "type": "boolean"
              }
            }
          }
        },
        "next_page_token": {
          "type": "string"
        }
      }
    }
  },
  {
    "name": "damien_get_email_details",
    "description": "Retrieves detailed information for a specific email using its unique ID. Can fetch metadata, full content, or raw format.",
    "input_schema": {
      "type": "object",
      "properties": {
        "message_id": {
          "type": "string",
          "description": "The unique ID of the email to retrieve. This ID is typically obtained from a 'damien_list_emails' call."
        },
        "format": {
          "type": "string",
          "enum": [
            "metadata",
            "full",
            "raw"
          ],
          "description": "Optional. The level of detail to retrieve. 'metadata' for headers and snippet (fastest), 'full' for parsed content including body, 'raw' for the complete raw email. Defaults to 'full'."
        }
      },
      "required": [
        "message_id"
      ]
    }
  },
  {
    "name": "damien_trash_emails",
    "description": "Moves one or more specified emails (by their IDs) to the Gmail Trash folder. Emails in Trash are typically deleted permanently after 30 days.",
    "input_schema": {
      "type": "object",
      "properties": {
        "message_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of unique email IDs to be moved to Trash."
        }
      },
      "required": [
        "message_ids"
      ]
    }
  },
  {
    "name": "damien_label_emails",
    "description": "Adds or removes specified labels from one or more emails. Provide label names as seen in Gmail.",
    "input_schema": {
      "type": "object",
      "properties": {
        "message_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of unique email IDs to modify."
        },
        "add_label_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of label names to add to the emails (e.g., ['Important', 'ProjectX']). System labels like 'STARRED' or 'IMPORTANT' can be used."
        },
        "remove_label_names": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of label names to remove from the emails (e.g., ['OldProject', 'UNREAD']). System labels like 'UNREAD' or 'INBOX' can be used."
        }
      },
      "required": [
        "message_ids"
      ]
    }
  },
  {
    "name": "damien_mark_emails",
    "description": "Marks one or more specified emails as 'read' or 'unread'.",
    "input_schema": {
      "type": "object",
      "properties": {
        "message_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of unique email IDs to mark."
        },
        "mark_as": {
          "type": "string",
          "enum": [
            "read",
            "unread"
          ],
          "description": "The state to mark the emails: 'read' or 'unread'."
        }
      },
      "required": [
        "message_ids",
        "mark_as"
      ]
    }
  },
  {
    "name": "damien_delete_emails_permanently",
    "description": "CRITICAL WARNING: Permanently deletes one or more specified emails. This action is IRREVERSIBLE and emails CANNOT be recovered. Use with extreme caution. Emails are removed completely and do not go to Trash.",
    "input_schema": {
      "type": "object",
      "properties": {
        "message_ids": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of unique email IDs to be PERMANENTLY DELETED. Double-check these IDs carefully."
        }
      },
      "required": [
        "message_ids"
      ]
    }
  },
  {
    "name": "damien_apply_rules",
    "description": "Applies configured filtering rules to emails in the Gmail account. Can operate on all emails or a filtered subset. Reports a summary of actions taken or planned.",
    "input_schema": {
      "type": "object",
      "properties": {
        "gmail_query_filter": {
          "type": "string",
          "description": "Optional. A Gmail search query to narrow down which emails are scanned for rule application (e.g., 'in:inbox is:unread')."
        },
        "rule_ids_to_apply": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of specific rule IDs or rule names to apply. If omitted, all enabled rules are considered."
        },
        "dry_run": {
          "type": "boolean",
          "description": "Optional. If true, simulates rule application and reports what actions *would* be taken without actually modifying any emails. Defaults to false (meaning actions will be executed). Recommended to use dry_run:true first for verification."
        },
        "scan_limit": {
          "type": "integer",
          "description": "Optional. Limits the total number of recent emails (or emails matching the main query) to fetch and consider for rule application. Useful for very large mailboxes or initial testing."
        },
        "date_after": {
          "type": "string",
          "format": "date",
          "description": "Optional. Process emails received after this date (YYYY/MM/DD or YYYY-MM-DD)."
        },
        "date_before": {
          "type": "string",
          "format": "date",
          "description": "Optional. Process emails received before this date (YYYY/MM/DD or YYYY-MM-DD)."
        },
        "all_mail": {
          "type": "boolean",
          "description": "Optional. If true, attempts to process all mail irrespective of date (unless other date filters are specified). Use with caution on large mailboxes; combine with scan_limit or specific queries. Defaults to processing recent mail (e.g., last 30 days if no other date filters)."
        }
      },
      "required": []
    }
  },
  {
    "name": "damien_list_rules",
    "description": "Lists all currently configured filtering rules in Damien.",
    "input_schema": {
      "type": "object",
      "properties": {},
      "required": []
    }
  },
  {
    "name": "damien_add_rule",
    "description": "Adds a new filtering rule to Damien. The rule definition must be a valid JSON object matching Damien's rule structure.",
    "input_schema": {
      "type": "object",
      "properties": {
        "rule_definition": {
          "type": "object",
          "description": "A JSON object defining the rule. Must include 'name' (string), 'conditions' (array of condition objects), and 'actions' (array of action objects). Optional fields: 'description' (string), 'is_enabled' (boolean, defaults to true), 'condition_conjunction' (string 'AND' or 'OR', defaults to 'AND'). Example condition: {'field': 'from', 'operator': 'contains', 'value': 'spam@example.com'}. Example action: {'type': 'trash'}.",
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "is_enabled": {
              "type": "boolean"
            },
            "conditions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "field": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                }
              }
            },
            "condition_conjunction": {
              "type": "string",
              "enum": [
                "AND",
                "OR"
              ]
            },
            "actions": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "required": [
            "name",
            "conditions",
            "actions"
          ]
        }
      },
      "required": [
        "rule_definition"
      ]
    }
  },
  {
    "name": "damien_delete_rule",
    "description": "Deletes an existing filtering rule from Damien, specified by its unique ID or name.",
    "input_schema": {
      "type": "object",
      "properties": {
        "rule_identifier": {
          "type": "string",
          "description": "The unique ID or the name of the rule to be deleted."
        }
      },
      "required": [
        "rule_identifier"
      ]
    }
  }
]